package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.netwisd.common.core.util.Result;
import ${package}.${moduleName}.dto.${className}Dto;
import ${package}.${moduleName}.vo.${className}Vo;
import ${package}.${moduleName}.service.${className}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;
import lombok.extern.slf4j.Slf4j;
import com.netwisd.common.core.anntation.Validation;
import java.util.List;

/**
 * @Description ${comments} 功能描述...
 * @author 云数网讯 ${author}@netwisd.com
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${pathName}" )
@Api(value = "${pathName}", tags = "${comments}Controller")
@Slf4j
public class ${className}Controller {

    private final  ${className}Service ${classname}Service;

    /**
     * 分页查询${comments}
     * @param ${classname}Dto ${comments}
     * @return
     */
    @ApiOperation(value = "分页查询", notes = "分页查询")
    @PostMapping("/page" )
    public Result<Page<${className}Vo>> page(@RequestBody ${className}Dto ${classname}Dto) {
        return Result.success(${classname}Service.page(${classname}Dto));
    }

    /**
     * 不分页查询${comments}
     * @param ${classname}Dto ${comments}
     * @return
     */
    @ApiOperation(value = "不分页查询", notes = "不分页查询")
    @PostMapping("/list" )
    public Result<List<${className}Vo>> list(@RequestBody ${className}Dto ${classname}Dto) {
        return Result.success(${classname}Service.list(${classname}Dto));
    }

    /**
     * 通过id查询${comments}
     * @param ${id.lowerAttrName} id
     * @return Result
     */
    @ApiOperation(value = "通过id查询", notes = "通过id查询")
    @GetMapping("/{${id.lowerAttrName}}" )
    public Result<${className}Vo> get(@PathVariable("${id.lowerAttrName}" ) ${id.attrType} ${id.lowerAttrName}) {
        return Result.success(${classname}Service.get(${id.lowerAttrName}));
    }

    /**
     * 新增${comments}
     * @param ${classname}Dto ${comments}
     * @return Result
     */
    @ApiOperation(value = "新增${comments}", notes = "新增${comments}")
    @PostMapping
    public Result<Boolean> save(@Validation @RequestBody ${className}Dto ${classname}Dto) {
        return Result.success(${classname}Service.save(${classname}Dto));
    }

    /**
     * 修改${comments}
     * @param ${classname}Dto ${comments}
     * @return Result
     */
    @ApiOperation(value = "修改${comments}", notes = "修改${comments}")
    @PutMapping
    public Result<Boolean> update(@Validation @RequestBody ${className}Dto ${classname}Dto) {
        return Result.success(${classname}Service.update(${classname}Dto));
    }

    /**
     * 通过id删除${comments}
     * @param ${id.lowerAttrName} id
     * @return Result
     */
    @ApiOperation(value = "通过id删除${comments}", notes = "通过id删除${comments}")
    @DeleteMapping("/{${id.lowerAttrName}}" )
    public Result<Boolean> delete(@PathVariable ${id.attrType} ${id.lowerAttrName}) {
        return Result.success(${classname}Service.delete(${id.lowerAttrName}));
    }
}